<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
?>


<?php /** @var $block Meetanshi\DistanceBasedShipping\Block\Shipping */ ?>



<?php
$isEnable = $block->getIsEnable();
$addresses = $block->getAddresses();
$hide = ($block->isManualWarehouseSelection() ? '' : 'style=display:none');

if ($isEnable && $addresses->count()) {
    ?>

    <fieldset class="fieldset" id="WarehouseAddress" <?php echo $hide ?> >
        <div class="field">
            <label class="label"
                   for="pickup_from"><span><?php echo $block->escapeHtml(__('Pickup From')) ?></span></label>
            <div class="control">
                <select name="pickup_from"
                        id="pickup_from"
                        title="<?php echo $block->escapeHtmlAttr(__('Pickup From')) ?>">
                    
                    <option value=""><?php echo $block->escapeHtmlAttr(__(' -- Please select address -- ')) ?></option>

                    <?php
                    foreach ($addresses->getData() as $address) {
                        ?>
                        <option selected="selected"
                            value="<?php echo $address['id'] ?>" <?php if ($block->getPickupFromId() == $address['id']) echo 'selected="selected"' ?>><?php echo "{$address['street']},{$address['city']},{$address['state']},{$address['country']},{$address['zipcode']}" ?></option>
                        <?php
                    } ?>
                </select>
            </div>
        </div>
    </fieldset>
    <?php
}
?>
<script>
    require(['jquery', 'loader', 'domReady!'], function ($) {
        $(document).ready(function () {
            <?php if ($block->getPickupFromId()): ?>
            $("#pickup_from").find('option[value="<?php echo $block->getPickupFromId() ?>"]').attr("selected", true);
            <?php endif; ?>

            var isShippingZipForm = setInterval(function () {
                if ($("#shipping-zip-form").length) {
                    setDistance();
                    clearInterval(isShippingZipForm);
                }
            }, 1000);
        });
        $(document).on('change', '#pickup_from', function () {
            setDistance();
        });
        var distanceUrl = "<?php echo $this->getUrl() . 'dbs/index/index'?>";

        function setDistance() {
            try {
                $.ajax({
                    url: distanceUrl,
                    type: 'POST',
                    dataType: 'json',
                    showLoader: true,
                    data: {
                        pickup_from: $("#pickup_from").val(),
                    },
                    complete: function () {
                        requirejs([
                            'Magento_Checkout/js/model/quote',
                            'Magento_Checkout/js/model/shipping-rate-registry',
                            'Magento_Checkout/js/model/shipping-rate-processor/new-address',
                            'Magento_Checkout/js/model/shipping-rate-processor/customer-address'
                        ], function (mainQuote, rateReg, defaultProcessor, customerAddressProcessor) {
                            try {
                                var processors = [];
                                rateReg.set(mainQuote.shippingAddress().getCacheKey(), null);
                                processors.default = defaultProcessor;
                                processors['customer-address'] = customerAddressProcessor;
                                var type = mainQuote.shippingAddress().getType();
                                if (processors[type]) {
                                    processors[type].getRates(mainQuote.shippingAddress());
                                } else {
                                    processors.default.getRates(mainQuote.shippingAddress());
                                }
                            } catch (e) {
                            }
                        });
                    },
                    error: function (xhr, status, errorThrown) {
                        console.log('Error happens. Try again.');
                    }
                });
            } catch (e) {
                console.log(e);
            }
        }
    });
</script>
<style>
    .checkout-cart-index #WarehouseAddress {
        visibility: hidden !important;
        height: 0 !important;
    }
        
</style>
